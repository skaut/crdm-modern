version: 2.1
workflows:
  main:
    jobs:
      - build
      - lint:
          requires:
            - build
      - translation-sync
      - package:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - build

job-references:
  restore_composer: &restore_composer
    keys:
      - v1-dependencies-{{ checksum "composer.json" }}
      - v1-dependencies-

  install_composer: &install_composer
    name: "Install Composer dependencies"
    command: composer install -n --prefer-dist

  save_composer: &save_composer
    key: v1-dependencies-{{ checksum "composer.json" }}
    paths:
      - vendor

  restore_npm: &restore_npm
    keys:
      - node-v2-{{ checksum "package.json" }}
      - node-v2-

  install_npm: &install_npm
    name: "Install NPM dependencies"
    command: npm ci

  save_npm: &save_npm
    key: node-v2-{{ checksum "package.json" }}
    paths:
      - node_modules

jobs:
  build:
    docker:
      - image: circleci/php:7.3-node
    steps:
      - checkout

      - restore_cache: *restore_composer
      - run: *install_composer
      - save_cache: *save_composer

      - restore_cache: *restore_npm
      - run: *install_npm
      - save_cache: *save_npm

      - run:
          name: "Install gettext"
          command: |
            sudo apt-get update
            sudo apt-get install gettext
      - run:
          name: "Build"
          command: npm run build
      - persist_to_workspace:
          root: dist
          paths:
            - "*"
  lint:
    docker:
      - image: circleci/php:7.3-node
    steps:
      - checkout

      - restore_cache: *restore_composer
      - run: *install_composer
      - save_cache: *save_composer

      - restore_cache: *restore_npm
      - run: *install_npm
      - save_cache: *save_npm

      - attach_workspace:
          at: dist

      - run:
          name: "Install php-ast"
          command: |
            sudo pecl install ast
            echo 'extension=ast.so' | sudo tee /usr/local/etc/php/php.ini > /dev/null
      - run:
          name: "Lint"
          command: npm run lint

  translation-sync:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout

      - restore_cache: *restore_npm
      - run: *install_npm
      - save_cache: *save_npm

      - run:
          name: "Update translations"
          command: npm run update-translations
      - run:
          name: Check for clean repo
          command: |
            [ -z "$(git status --porcelain)" ] || (c=$?; git status; (exit $c))

  package:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run:
          name: "Install ghr"
          command: go get github.com/tcnksm/ghr
      - run:
          name: "Create zip package"
          command: |
            cp -r dist ${CIRCLE_PROJECT_REPONAME}
            zip -r ${CIRCLE_PROJECT_REPONAME}.${CIRCLE_TAG}.zip ${CIRCLE_PROJECT_REPONAME}
      - run:
          name: "Upload the package to GitHub"
          command: ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n "Version ${CIRCLE_TAG}" ${CIRCLE_TAG} ${CIRCLE_PROJECT_REPONAME}.${CIRCLE_TAG}.zip
